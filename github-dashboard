#!/usr/bin/env perl
use v5.10;
use strict;
use warnings;
use utf8;
use Carp;
use Net::GitHub;
use Getopt::Lucid ':all';
use List::Util qw/max/;

my $opts = Getopt::Lucid->getopt(
    [
        #<<< No perltidy
        Switch('all|a'),
        #>>>
    ]
);

$opts->validate;

sub _git_config {
    my $key = shift;
    chomp( my $value = `git config --get $key` );
    croak "Unknown $key" unless $value;
    return $value;
}

my $github_user  = _git_config("github.user");
my $github_token = _git_config("github.token");

my $gh = Net::GitHub->new( access_token => $github_token );

my @issues = $gh->query("/orgs/dagolden/issues?filter=all&state=open");

while ( $gh->has_next_page ) {
    push @issues, $gh->next_page;
}

my %dash;
for my $i (@issues) {
    my $name = $i->{repository}{name};
    for (qw/PR wish issue total/) {
        $dash{ $name  }{$_} //= 0;
    }
    my $labels = $i->{labels};
    my $wishlist = $i->{title} =~ /wish-?list/i
      || grep { /enhancement|question|wishlist/i } map { $_->{name} } @{ $i->{labels} };
    my $type =
        exists $i->{pull_request} ? 'PR'
      : $wishlist                 ? 'wish'
      :                             'issue';
    $dash{ $name }{$type}++;
    $dash{ $name }{total}++ unless $wishlist;
}

my $width = max( map { length($_) } keys %dash );

my @sorted = sort {
         $dash{$b}{PR} <=> $dash{$a}{PR}
      || $dash{$b}{issue} <=> $dash{$a}{issue}
      || lc($a) cmp lc($b)
} keys %dash;

for my $k (@sorted) {
    printf( "%*s %3d %3d %3d\n",
        $width, $k, $dash{$k}{PR}, $dash{$k}{issue}, $dash{$k}{wish}, );
}
